<?xml version="1.0" encoding="UTF-8"?>
<subject
        xmlns="http://syllabus2011subject.types.skolverket.se/v1_4"><guid
        xsi:nil="true"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><name>Programmering</name><description>&lt;p>Ämnet programmering behandlar programmeringens roll i informationstekniska sammanhang som datorsimulering, animerad grafik, praktisk datoriserad problemlösning och användaranpassad konfiguration av programvara. Det behandlar också hur man skapar, utvecklar och anpassar programvaror samt tillämpar datalogisk teori.&lt;/p></description><code>PRR</code><gradeScale
        xsi:nil="true"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><purpose>&lt;p>Undervisningen i ämnet programmering ska syfta till att eleverna utvecklar kunskaper om principerna bakom datorprogram samt färdigheter i programmering i ett eller flera programmeringsspråk. Eleverna ska ges möjlighet att utveckla kunskaper om programmeringens grunder, färdigheter i att genomföra programmeringsprocessens olika delar samt förmåga att analysera, designa, implementera, testa, resultatbedöma och vidareutveckla program. Undervisningen ska bidra till att eleverna utvecklar kunskaper om de mest använda programmeringsspråken och deras tillämpningar och användningsområden samt om traditioner och nya trender i utvecklingen av programmeringsspråk. Dessutom ska undervisningen behandla datorns användning i samhället och ge eleverna möjlighet att utveckla kunskaper om datorns möjligheter och begränsningar.&lt;/p>&lt;p>I undervisningen ska eleverna ges möjlighet att arbeta i projekt och att enskilt eller i grupp utföra programmeringsuppgifter av varierande komplexitet och inom olika tillämpningsområden. Programmeringsuppgifterna ska omfatta såväl egen programmering som lösning på programmeringstekniska problem och programutveckling med en given källkod som grund.&lt;/p>&lt;h4>Undervisningen i ämnet programmering ska ge eleverna förutsättningar att utveckla följande:&lt;/h4>&lt;p>
&lt;/p>&lt;ol> 
&lt;li>Kunskaper om datorstyrda industriella system och om industriell datorkommunikation.&lt;/li> 
&lt;li>Förmåga att formulera och planera programmeringsuppgifter med pseudokod och diagramteknik.&lt;/li> 
&lt;li>Förståelse av och färdigheter i att använda datalogiska begrepp och algoritmer.&lt;/li> 
&lt;li>Kunskaper om programmeringsspråk samt förmåga att skriva, läsa, strukturera, analysera, dokumentera och kommentera källkod i ett eller flera programmeringsspråk.&lt;/li> 
&lt;li>Kunskaper om gränssnitt mot användare, filer, filsystem, operativsystem, databaser och internet.&lt;/li> 
&lt;li>Kunskaper om objektorienterad programmering i teori och praktik.&lt;/li> 
&lt;li>Förmåga att finna, diskutera, åtgärda och förhindra syntaxfel, programkörningsfel och programmeringslogiska fel.&lt;/li> 
&lt;li>Kunskaper om samspelet mellan program, körtidsmiljö, operativsystem och hårdvara.&lt;/li> 
&lt;/ol>&lt;p>&lt;/p>&lt;h3>Kurser i ämnet&lt;/h3>&lt;p>&lt;/p>&lt;ol> 
&lt;li>Programmering 1, 100 poäng.&lt;/li> 
&lt;li>Programmering 2, 100 poäng, som bygger på kursen programmering 1.&lt;/li> 
&lt;li>Industriell programmering, 100 poäng, som bygger på kursen programmering 1.&lt;/li> 
&lt;li>Datalogi, 100 poäng. Kursen får bara anordnas i vidareutbildning i form av ett fjärde tekniskt år i gymnasieskolan.&lt;/li> &lt;/ol>&lt;p>&lt;/p></purpose><skolfsId>0000:00</skolfsId><applianceDate>2015-05-18T00:00:00+02:00</applianceDate><courses><guid
            xsi:nil="true"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><name>Datalogi</name><description>&lt;p>Kursen datalogi omfattar punkterna 2–8 under rubriken Ämnets syfte, med särskild betoning på punkterna 3, 4, 6 och 8.&lt;/p></description><code>PRRDAT0</code><centralContent>&lt;h4>Undervisningen i kursen ska behandla följande centrala innehåll:&lt;/h4>&lt;p> 
&lt;/p>&lt;ul> 
&lt;li>Olika programmeringsspråks historik och inbördes släktskap.&lt;/li> 
&lt;li>Olika programmeringsparadigms historik och användningsområden.&lt;/li> 
&lt;li>De vanligaste programmeringsspråkens aktuella användningsområden.&lt;/li> 
&lt;li>Traditioner och nya trender i utvecklingen av programmeringsspråk.&lt;/li> 
&lt;li>Kompilerade och interpreterade språk.&lt;/li> 
&lt;li>Statisk och dynamisk typning.&lt;/li> 
&lt;li>Datastrukturer. Val och implementering av strukturer.&lt;/li> 
&lt;li>Algoritmer, användningsområden samt komplexitet.&lt;/li> 
&lt;li>Rekursion och svansrekursion.&lt;/li> 
&lt;li>Designmönster och mjukvaruarkitektur.&lt;/li> 
&lt;li>Abstrakta modeller, till exempel tillståndsmaskin.&lt;/li> 
&lt;/ul>&lt;p>&lt;/p></centralContent><point>100</point><knowledgeRequirements><guid
                xsi:nil="true"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><text>&lt;h4>Betyget A&lt;/h4>&lt;p>Eleven redogör &lt;strong>utförligt och nyanserat&lt;/strong> för olika programmeringsparadigms historik och användningsområden.&lt;/p>&lt;p>Eleven planerar &lt;strong>efter samråd &lt;/strong>med handledare programmeringsuppgifter, och väljer &lt;strong>med säkerhet&lt;/strong> lämpliga programmeringsspråk. I planeringen väljer eleven &lt;strong>efter samråd &lt;/strong>med handledare datastrukturer och algoritmer som är adekvata för uppgiften. Eleven implementerar &lt;strong>några&lt;/strong> datastrukturer och &lt;strong>efter samråd &lt;/strong>med handledare också &lt;strong>några&lt;/strong> standardalgoritmer, samt löser &lt;strong>några&lt;/strong> uppgifter genom att utnyttja rekursion. Eleven gör en &lt;strong>avancerad&lt;/strong> analys av en eller flera algoritmers komplexitet. Eleven strukturerar sitt arbete &lt;strong>med säkerhet&lt;/strong> enligt en fungerande modell. Elevens färdiga program eller skript är utförda med &lt;strong>goda &lt;/strong>resultat i flera programmeringsspråk från olika programmeringsparadigm &lt;strong>i program av komplex karaktär&lt;/strong>.&lt;/p>&lt;p>Eleven anpassar &lt;strong>med säkerhet&lt;/strong> sin planering av programmeringsuppgifter och utför &lt;strong>på ett systematiskt och effektivt sätt&lt;/strong> felsökning av logiska fel och syntaxfel. Innan programmeringsuppgifter avslutas utvärderar eleven med &lt;strong>nyanserade &lt;/strong>omdömen &lt;strong>och med förslag på förbättringar&lt;/strong> programmens prestanda och ändamålsenlighet i &lt;strong>flera &lt;/strong>situationer och sammanhang. Eleven kommunicerar om programmeringsuppgiften och dess utvärdering och använder då&lt;strong> med säkerhet&lt;/strong> datalogiska begrepp.&lt;/p>&lt;p>När eleven samråder med handledare bedömer hon eller han &lt;strong>med säkerhet &lt;/strong>den egna förmågan och situationens krav.&lt;/p></text><year
                xsi:nil="true"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><gradeStep>A</gradeStep></knowledgeRequirements><knowledgeRequirements><guid
                xsi:nil="true"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><text>&lt;h4>Betyget B&lt;/h4>&lt;p>Betyget B innebär att kunskapskraven för C och till övervägande del för A är uppfyllda.&lt;/p>
</text><year
                xsi:nil="true"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><gradeStep>B</gradeStep></knowledgeRequirements><knowledgeRequirements><guid
                xsi:nil="true"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><text>&lt;h4>Betyget C&lt;/h4>&lt;p>Eleven redogör &lt;strong>utförligt&lt;/strong> för olika programmeringsparadigms historik och användningsområden.&lt;/p>&lt;p>Eleven planerar &lt;strong>efter samråd &lt;/strong>med handledare programmeringsuppgifter, och väljer &lt;strong>med viss säkerhet&lt;/strong> lämpliga programmeringsspråk. I planeringen väljer eleven &lt;strong>efter samråd &lt;/strong>med handledare datastrukturer och algoritmer som är adekvata för uppgiften. Eleven implementerar &lt;strong>någon&lt;/strong> datastruktur och&lt;strong> efter samråd &lt;/strong>med handledare också &lt;strong>någon&lt;/strong> standardalgoritm, samt löser &lt;strong>någon&lt;/strong> uppgift genom att utnyttja rekursion. Eleven gör en analys av en eller flera algoritmers komplexitet. Eleven strukturerar sitt arbete &lt;strong>med viss säkerhet&lt;/strong> enligt en fungerande modell. Elevens färdiga program eller skript är utförda med &lt;strong>tillfredsställande &lt;/strong>resultat i flera programmeringsspråk från olika programmeringsparadigm.&lt;/p>&lt;p>Eleven anpassar &lt;strong>med viss säkerhet&lt;/strong> sin planering av programmeringsuppgifter och utför &lt;strong>på ett systematiskt sätt&lt;/strong> felsökning av logiska fel och syntaxfel. Innan programmeringsuppgiften avslutas utvärderar eleven med &lt;strong>nyanserade &lt;/strong>omdömen programmets prestanda och ändamålsenlighet i &lt;strong>några &lt;/strong>situationer och sammanhang. Eleven kommunicerar om programmeringsuppgiften och dess utvärdering och använder då&lt;strong> med viss säkerhet&lt;/strong> datalogiska begrepp.&lt;/p>&lt;p>När eleven samråder med handledare bedömer hon eller han &lt;strong>med viss säkerhet &lt;/strong>den egna förmågan och situationens krav.&lt;/p></text><year
                xsi:nil="true"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><gradeStep>C</gradeStep></knowledgeRequirements><knowledgeRequirements><guid
                xsi:nil="true"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><text>&lt;h4>Betyget D&lt;/h4>&lt;p>Betyget D innebär att kunskapskraven för E och till övervägande del för C är uppfyllda.&lt;/p>
</text><year
                xsi:nil="true"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><gradeStep>D</gradeStep></knowledgeRequirements><knowledgeRequirements><guid
                xsi:nil="true"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><text>&lt;h4>Betyget E&lt;/h4>&lt;p>Eleven redogör &lt;strong>översiktligt&lt;/strong> för olika programmeringsparadigms historik och användningsområden.&lt;/p>&lt;p>Eleven planerar &lt;strong>i samråd &lt;/strong>med handledare programmeringsuppgifter, och väljer &lt;strong>med&lt;/strong> &lt;strong>viss säkerhet&lt;/strong> lämpliga programmeringsspråk. I planeringen väljer eleven &lt;strong>med viss säkerhet &lt;/strong>datastrukturer och algoritmer som är adekvata för uppgiften. Eleven implementerar &lt;strong>någon&lt;/strong> datastruktur och &lt;strong>i samråd &lt;/strong>med handledare också &lt;strong>någon&lt;/strong> standardalgoritm, samt löser &lt;strong>någon&lt;/strong> uppgift genom att utnyttja rekursion. Eleven gör en &lt;strong>enkel&lt;/strong> analys av en eller flera algoritmers komplexitet. Eleven strukturerar sitt arbete &lt;strong>i samråd &lt;/strong>med handledare enligt en fungerande modell. Elevens färdiga program eller skript är utförda med &lt;strong>tillfredsställande &lt;/strong>resultat i flera programmeringsspråk från olika programmeringsparadigm &lt;strong>i program av enkel karaktär&lt;/strong>.&lt;/p>&lt;p>Eleven anpassar &lt;strong>med viss säkerhet&lt;/strong> sin planering av programmeringsuppgiften och utför felsökning av &lt;strong>enkla&lt;/strong> logiska fel och syntaxfel. Innan programmeringsuppgiften avslutas utvärderar eleven med&lt;strong> enkla &lt;/strong>omdömen programmets prestanda och ändamålsenlighet i &lt;strong>någon &lt;/strong>situation och i &lt;strong>något&lt;/strong> sammanhang. Eleven kommunicerar om programmeringsuppgiften och dess utvärdering och använder då &lt;strong>med viss säkerhet&lt;/strong> datalogiska begrepp.&lt;/p>&lt;p>När eleven samråder med handledare bedömer hon eller han &lt;strong>med viss säkerhet &lt;/strong>den egna förmågan och situationens krav.&lt;/p></text><year
                xsi:nil="true"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><gradeStep>E</gradeStep></knowledgeRequirements><alternativeCourseCode
            xsi:nil="true"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></courses><courses><guid
            xsi:nil="true"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><name>Industriell programmering</name><description>&lt;p>Kursen industriell programmering omfattar punkterna 1, 3–4 och 7–8 under rubriken Ämnets syfte.&lt;/p></description><code>PRRIND0</code><centralContent>&lt;h4>Undervisningen i kursen ska behandla följande centrala innehåll:&lt;/h4>&lt;p> 
&lt;/p>&lt;ul> 
&lt;li>Datorstyrda industriella produktionssystems uppbyggnad och funktion.&lt;/li> 
&lt;li>Protokoll för industriell datorkommunikation.&lt;/li> 
&lt;li>Grundläggande ekonomiska och kvalitetstekniska villkor för datorstyrda industriella produktionssystem.&lt;/li> 
&lt;li>Tillämpning av boolesk algebra vid utveckling av logiska villkor.&lt;/li> 
&lt;li>Användning av kontrollstrukturer inom industriell programmering.&lt;/li> 
&lt;li>Ett eller flera programmeringsspråk lämpade för programmering av maskiner, industriella styrsystem och industrirobotar.&lt;/li> 
&lt;li>Robotprogrammering i virtuella miljöer.&lt;/li> 
&lt;li>Hantering av programstöd för datorstyrd tillverkning.&lt;/li> 
&lt;li>Programstyrning och kommunikation i datoriserade produktionssystem.&lt;/li> 
&lt;li>Analys, förebyggande och åtgärdande av programmeringsfel.&lt;/li> 
&lt;li>Säkerhet inom datorstyrda industriella produktionssystem utifrån gällande normer.&lt;/li> 
&lt;/ul>&lt;p>&lt;/p></centralContent><point>100</point><knowledgeRequirements><guid
                xsi:nil="true"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><text>&lt;h4>Betyget A&lt;/h4>&lt;p>Eleven redogör &lt;strong>utförligt och nyanserat &lt;/strong>för hur datorstyrda industriella tillverkningssystem byggs upp och fungerar. Eleven redogör också &lt;strong>utförligt &lt;/strong>för några protokoll för industriell datorkommunikation. Dessutom redogör eleven &lt;strong>utförligt &lt;/strong>för hur industriella produktionssystem styrs av ekonomiska villkor och kvalitetstekniska krav.&lt;/p>&lt;p>Eleven formulerar logiska villkor och tillämpar &lt;strong>komplexa &lt;/strong>kontrollstrukturer inom industriell programmering. Eleven programmerar &lt;strong>med säkerhet&lt;/strong>, med ett eller flera språk, maskiner, industriella styrsystem och industrirobotar. Eleven programmerar också med &lt;strong>gott &lt;/strong>resultat robotar i virtuella miljöer och använder &lt;strong>med&lt;/strong> &lt;strong>säkerhet&lt;/strong> programstöd för datorstyrd tillverkning. Dessutom planerar och programmerar eleven &lt;strong>efter samråd &lt;/strong>med handledare programstyrning och kommunikation i datoriserade produktionssystem samt gör en &lt;strong>noggrann och utförlig &lt;/strong>dokumentation och värderar sitt resultat med &lt;strong>nyanserade &lt;/strong>omdömen. &lt;strong>Eleven ger förslag på hur arbetet kan förbättras.&lt;/strong>&lt;/p>&lt;p>I arbetet felsöker och åtgärdar eleven &lt;strong>med säkerhet komplexa &lt;/strong>programmeringsfel. Eleven arbetar säkert utifrån gällande normer för industriella produktionssystem.&lt;/p>&lt;p>När eleven samråder med handledare bedömer hon eller han &lt;strong>med säkerhet &lt;/strong>den egna förmågan och situationens krav.&lt;/p></text><year
                xsi:nil="true"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><gradeStep>A</gradeStep></knowledgeRequirements><knowledgeRequirements><guid
                xsi:nil="true"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><text>&lt;h4>Betyget B&lt;/h4>&lt;p>Betyget B innebär att kunskapskraven för C och till övervägande del för A är uppfyllda.&lt;/p>
</text><year
                xsi:nil="true"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><gradeStep>B</gradeStep></knowledgeRequirements><knowledgeRequirements><guid
                xsi:nil="true"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><text>&lt;h4>Betyget C&lt;/h4>&lt;p>Eleven redogör &lt;strong>utförligt &lt;/strong>för hur datorstyrda industriella tillverkningssystem byggs upp och fungerar. Eleven redogör också &lt;strong>utförligt &lt;/strong>för några protokoll för industriell datorkommunikation. Dessutom redogör eleven &lt;strong>utförligt &lt;/strong>för hur industriella produktionssystem styrs av ekonomiska villkor och kvalitetstekniska krav.&lt;/p>&lt;p>Eleven formulerar logiska villkor och tillämpar kontrollstrukturer inom industriell programmering. Eleven programmerar &lt;strong>med viss säkerhet&lt;/strong>, med ett eller flera språk, maskiner, industriella styrsystem och industrirobotar. Eleven programmerar också med &lt;strong>tillfredsställande &lt;/strong>resultat robotar i virtuella miljöer och använder &lt;strong>med&lt;/strong> &lt;strong>viss säkerhet&lt;/strong> programstöd för datorstyrd tillverkning. Dessutom planerar och programmerar eleven &lt;strong>efter samråd &lt;/strong>med handledare programstyrning och kommunikation i datoriserade produktionssystem samt gör en &lt;strong>noggrann &lt;/strong>dokumentation och värderar sitt resultat med &lt;strong>nyanserade &lt;/strong>omdömen.&lt;/p>&lt;p>I arbetet felsöker och åtgärdar eleven &lt;strong>med viss säkerhet &lt;/strong>programmeringsfel. Eleven arbetar säkert utifrån gällande normer för industriella produktionssystem.&lt;/p>&lt;p>När eleven samråder med handledare bedömer hon eller han &lt;strong>med viss säkerhet &lt;/strong>den egna förmågan och situationens krav.&lt;/p></text><year
                xsi:nil="true"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><gradeStep>C</gradeStep></knowledgeRequirements><knowledgeRequirements><guid
                xsi:nil="true"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><text>&lt;h4>Betyget D&lt;/h4>&lt;p>Betyget D innebär att kunskapskraven för E och till övervägande del för C är uppfyllda.&lt;/p>
</text><year
                xsi:nil="true"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><gradeStep>D</gradeStep></knowledgeRequirements><knowledgeRequirements><guid
                xsi:nil="true"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><text>&lt;h4>Betyget E&lt;/h4>&lt;p>Eleven redogör &lt;strong>översiktligt&lt;/strong> för hur datorstyrda industriella tillverkningssystem byggs upp och fungerar. Eleven redogör också &lt;strong>översiktligt &lt;/strong>för några protokoll för industriell datorkommunikation. Dessutom redogör eleven &lt;strong>översiktligt&lt;/strong> för hur industriella produktionssystem styrs av ekonomiska villkor och kvalitetstekniska krav.&lt;/p>&lt;p>Eleven formulerar logiska villkor och tillämpar &lt;strong>enkla&lt;/strong> kontrollstrukturer inom industriell programmering. Eleven programmerar &lt;strong>med viss säkerhet&lt;/strong>, med ett eller flera språk, maskiner, industriella styrsystem och industrirobotar. Eleven programmerar också med &lt;strong>tillfredsställande &lt;/strong>resultat robotar i virtuella miljöer och använder &lt;strong>med&lt;/strong> &lt;strong>viss säkerhet&lt;/strong> programstöd för datorstyrd tillverkning. Dessutom planerar och programmerar eleven &lt;strong>i samråd &lt;/strong>med handledare programstyrning och kommunikation i datoriserade produktionssystem samt gör en &lt;strong>enkel &lt;/strong>dokumentation och värderar sitt resultat med &lt;strong>enkla &lt;/strong>omdömen.&lt;/p>&lt;p>I arbetet felsöker och åtgärdar eleven &lt;strong>med viss säkerhet&lt;/strong> &lt;strong>enkla&lt;/strong> programmeringsfel. Eleven arbetar säkert utifrån gällande normer för industriella produktionssystem.&lt;/p>&lt;p>När eleven samråder med handledare bedömer hon eller han &lt;strong>med viss säkerhet &lt;/strong>den egna förmågan och situationens krav.&lt;/p></text><year
                xsi:nil="true"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><gradeStep>E</gradeStep></knowledgeRequirements><alternativeCourseCode
            xsi:nil="true"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></courses><courses><guid
            xsi:nil="true"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><name>Programmering 1</name><description>&lt;p>Kursen programmering 1 omfattar punkterna 2–8 under rubriken Ämnets syfte, med särskild betoning på punkterna 2–4 och 7–8.&lt;/p></description><code>PRRPRR01</code><centralContent>&lt;h4>Undervisningen i kursen ska behandla följande centrala innehåll: &lt;/h4>&lt;p> 
&lt;/p>&lt;ul> 
&lt;li>Sekventiell programmering i det eller de valda programmeringsspråken. Språkurvalet kan göras från såväl programspråk och skriptspråk som kompilerande och tolkande språk. Ett av de valda språken ska stödja objektorientering på ett påtagligt sätt.&lt;/li> 
&lt;li>Programmeringsspråkets eller språkens grundläggande datatyper samt fördefinierade strukturer, regler och syntax.&lt;/li> 
&lt;li>Traditioner och trender i utvecklingen av programmeringsspråk.&lt;/li> 
&lt;li>Problemlösning och problemstrukturering.&lt;/li> 
&lt;li>Kontrollstrukturer, till exempel sekvens, selektion och iteration skrivna i ett implementerat programflöde.&lt;/li> 
&lt;li>Grunderna för klasser, objekt, egenskaper och metoder.&lt;/li> 
&lt;li>Variablers och konstanters synlighet och livslängd.&lt;/li> 
&lt;li>Enkla algoritmer, till exempel för sökning eller sortering.&lt;/li> 
&lt;li>Implementeringar av datastrukturer, till exempel array, lista eller trädstruktur.&lt;/li> 
&lt;li>Felsökning av källkod och undantagshantering.&lt;/li> 
&lt;li>De vanligaste programmeringsspråkens krav på körtidsmiljöer och operativsystem samt deras aktuella användningsområden.&lt;/li> 
&lt;/ul>&lt;p>&lt;/p></centralContent><point>100</point><knowledgeRequirements><guid
                xsi:nil="true"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><text>&lt;h4>Betyget A&lt;/h4>&lt;p>Eleven formulerar och planerar &lt;strong>efter samråd &lt;/strong>med handledare programmeringsuppgifter med pseudokod eller aktivitetsdiagram. I planeringen väljer eleven &lt;strong>med säkerhet&lt;/strong> kontrollstrukturer, metoder, variabler, datastrukturer och algoritmer som är adekvata för uppgiften &lt;strong>samt motiverar utförligt sina val&lt;/strong>. Eleven implementerar &lt;strong>några &lt;/strong>sökningsalgoritmer, sorteringsalgoritmer eller andra algoritmer&lt;strong> efter samråd &lt;/strong>med handledare.&lt;/p>&lt;p>I sin programmering skriver eleven, med konsekvent kodningsstil och tydlig namngivning, en korrekt, strukturerad och &lt;strong>noggrant och utförligt &lt;/strong>kommenterad källkod med &lt;strong>gott&lt;/strong> resultat. Dessutom väljer eleven &lt;strong>med säkerhet &lt;/strong>ett uttryckssätt som är anpassat för att på ett &lt;strong>gott &lt;/strong>sätt interagera med den avsedda användaren. Elevens färdiga program eller skript är utförda med &lt;strong>gott &lt;/strong>resultat i ett eller flera programmeringsspråk och innehåller sekventiell programmering och grundläggande objektorienterad programmering som är stabil och robust &lt;strong>i program av komplex karaktär&lt;/strong>.&lt;/p>&lt;p>Eleven anpassar &lt;strong>med säkerhet&lt;/strong> sin planering av programmeringsuppgiften och utför &lt;strong>på ett systematiskt och effektivt sätt &lt;/strong>felsökning av syntaxfel, &lt;strong>körtidsfel och programmeringslogiska fel&lt;/strong>. Innan programmeringsuppgiften avslutas utvärderar eleven med &lt;strong>nyanserade &lt;/strong>omdömen &lt;strong>och med förslag på förbättringar &lt;/strong>programmets prestanda och ändamålsenlighet i &lt;strong>flera&lt;/strong> situationer och sammanhang. Eleven kommunicerar om programmeringsuppgiften och dess utvärdering och använder då &lt;strong>med säkerhet&lt;/strong> datalogiska begrepp.&lt;/p>&lt;p>När eleven samråder med handledare bedömer hon eller han &lt;strong>med säkerhet &lt;/strong>den egna förmågan och situationens krav.&lt;/p></text><year
                xsi:nil="true"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><gradeStep>A</gradeStep></knowledgeRequirements><knowledgeRequirements><guid
                xsi:nil="true"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><text>&lt;h4>Betyget B&lt;/h4>&lt;p>Betyget B innebär att kunskapskraven för C och till övervägande del för A är uppfyllda.&lt;/p>
</text><year
                xsi:nil="true"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><gradeStep>B</gradeStep></knowledgeRequirements><knowledgeRequirements><guid
                xsi:nil="true"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><text>&lt;h4>Betyget C&lt;/h4>&lt;p>Eleven formulerar och planerar &lt;strong>efter samråd &lt;/strong>med handledare programmeringsuppgifter med pseudokod eller aktivitetsdiagram. I planeringen väljer eleven &lt;strong>med viss säkerhet&lt;/strong> kontrollstrukturer, metoder, variabler, datastrukturer och algoritmer som är adekvata för uppgiften. Eleven implementerar &lt;strong>någon&lt;/strong> sökningsalgoritm, sorteringsalgoritm eller annan algoritm &lt;strong>efter samråd &lt;/strong>med handledare.&lt;/p>&lt;p>I sin programmering skriver eleven, med konsekvent kodningsstil och tydlig namngivning, korrekt, strukturerad och &lt;strong>noggrant&lt;/strong> kommenterad källkod med &lt;strong>tillfredsställande&lt;/strong> resultat. Dessutom väljer eleven &lt;strong>med viss säkerhet &lt;/strong>ett uttryckssätt som är anpassat för att på ett &lt;strong>tillfredsställande &lt;/strong>sätt interagera med den avsedda användaren. Elevens färdiga program eller skript är utförda med &lt;strong>tillfredsställande &lt;/strong>resultat i ett eller flera programmeringsspråk och innehåller sekventiell programmering och grundläggande objektorienterad programmering som är stabil och robust.&lt;/p>&lt;p>Eleven anpassar &lt;strong>med viss säkerhet&lt;/strong> sin planering av programmeringsuppgiften och utför &lt;strong>på ett systematiskt sätt &lt;/strong>felsökning av syntaxfel, &lt;strong>körtidsfel och programmeringslogiska fel&lt;/strong>. Innan programmeringsuppgiften avslutas utvärderar eleven med&lt;strong> nyanserade &lt;/strong>omdömen programmets prestanda och ändamålsenlighet i &lt;strong>några&lt;/strong> situationer och sammanhang. Eleven kommunicerar om programmeringsuppgiften och dess utvärdering och använder då&lt;strong> med viss säkerhet&lt;/strong> datalogiska begrepp.&lt;/p>&lt;p>När eleven samråder med handledare bedömer hon eller han &lt;strong>med viss säkerhet &lt;/strong>den egna förmågan och situationens krav.&lt;/p></text><year
                xsi:nil="true"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><gradeStep>C</gradeStep></knowledgeRequirements><knowledgeRequirements><guid
                xsi:nil="true"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><text>&lt;h4>Betyget D&lt;/h4>&lt;p>Betyget D innebär att kunskapskraven för E och till övervägande del för C är uppfyllda.&lt;/p>
</text><year
                xsi:nil="true"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><gradeStep>D</gradeStep></knowledgeRequirements><knowledgeRequirements><guid
                xsi:nil="true"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><text>&lt;h4>Betyget E&lt;/h4>&lt;p>Eleven formulerar och planerar &lt;strong>i samråd &lt;/strong>med handledare programmeringsuppgifter med pseudokod eller aktivitetsdiagram. I planeringen väljer eleven &lt;strong>med viss säkerhet&lt;/strong> kontrollstrukturer, metoder, variabler, datastrukturer och algoritmer som är adekvata för uppgiften. Eleven implementerar &lt;strong>någon&lt;/strong> sökningsalgoritm, sorteringsalgoritm eller annan algoritm &lt;strong>i samråd &lt;/strong>med handledare.&lt;/p>&lt;p>I sin programmering skriver eleven, med konsekvent kodningsstil och tydlig namngivning, korrekt, strukturerad och &lt;strong>enkelt&lt;/strong> kommenterad källkod med &lt;strong>tillfredsställande&lt;/strong> resultat. Dessutom väljer eleven &lt;strong>med viss säkerhet &lt;/strong>ett uttryckssätt som är anpassat för att på ett &lt;strong>tillfredsställande &lt;/strong>sätt interagera med den avsedda användaren. Elevens färdiga program eller skript är utförda med &lt;strong>tillfredsställande &lt;/strong>resultat i ett eller flera programmeringsspråk och innehåller sekventiell programmering och grundläggande objektorienterad programmering som är stabil och robust &lt;strong>i program av enkel karaktär&lt;/strong>.&lt;/p>&lt;p>Eleven anpassar &lt;strong>med viss säkerhet&lt;/strong> sin planering av programmeringsuppgiften och utför felsökning av &lt;strong>enkla&lt;/strong> syntaxfel. Innan programmeringsuppgiften avslutas utvärderar eleven med &lt;strong>enkla &lt;/strong>omdömen programmets prestanda och ändamålsenlighet i &lt;strong>någon&lt;/strong> situation och i &lt;strong>något&lt;/strong> sammanhang. Eleven kommunicerar om programmeringsuppgiften och dess utvärdering och använder då &lt;strong>med viss säkerhet&lt;/strong> datalogiska begrepp.&lt;/p>&lt;p>När eleven samråder med handledare bedömer hon eller han &lt;strong>med viss säkerhet &lt;/strong>den egna förmågan och situationens krav.&lt;/p></text><year
                xsi:nil="true"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><gradeStep>E</gradeStep></knowledgeRequirements><alternativeCourseCode
            xsi:nil="true"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></courses><courses><guid
            xsi:nil="true"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><name>Programmering 2</name><description>&lt;p>Kursen programmering 2 omfattar punkterna 2–8 under rubriken Ämnets syfte, med särskild betoning på punkterna 5 och 6.&lt;/p></description><code>PRRPRR02</code><centralContent>&lt;h4>Undervisningen i kursen ska behandla följande centrala innehåll: &lt;/h4>&lt;p> 
&lt;/p>&lt;ul> 
&lt;li>Kodning av program för att läsa, bedöma, lagra, producera, redovisa och utbyta information samt för att kommunicera och utföra tjänster via internet.&lt;/li> 
&lt;li>Traditioner och nya trender i utvecklingen av programmeringsspråk.&lt;/li> 
&lt;li>Analys, nedbrytning och modellering av programmeringstekniska problem med klassdiagram.&lt;/li> 
&lt;li>Skapande av klasser och objekt i avancerad objektorienterad programmering samt klassers konstruktorer och arv.&lt;/li> 
&lt;li>Användning och förändring av objekt som ingår i egna och andras klasser och standardbibliotek.&lt;/li> 
&lt;li>Variablers och metoders synlighet och livslängd.&lt;/li> 
&lt;li>Polymorfism och typsäkerhet.&lt;/li> 
&lt;li>Generiska klasser och metoder.&lt;/li> 
&lt;li>De vanligaste klasserna i ett grafiskt användargränssnitt.&lt;/li> 
&lt;li>Gränssnitt mot internet.&lt;/li> 
&lt;li>Gränssnitt mot profiler och filsystem.&lt;/li> 
&lt;li>Gränssnitt mot databaser.&lt;/li> 
&lt;/ul>&lt;p>&lt;/p></centralContent><point>100</point><knowledgeRequirements><guid
                xsi:nil="true"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><text>&lt;h4>Betyget A&lt;/h4>&lt;p>Eleven formulerar och planerar programmeringsuppgifter med enkla klassdiagram. I planeringen väljer eleven &lt;strong>med säkerhet&lt;/strong> standardbibliotek, egna och andras klasser, konstruktorer, objekt och gränssnitt som är adekvata för uppgiften &lt;strong>samt motiverar utförligt sina val&lt;/strong>.&lt;/p>&lt;p>I sin programmering skriver eleven, med konsekvent kodningsstil och tydlig namngivning, en korrekt, strukturerad och &lt;strong>noggrant och utförligt &lt;/strong>kommenterad källkod med &lt;strong>gott&lt;/strong> resultat. Dessutom väljer eleven &lt;strong>med säkerhet &lt;/strong>ett uttryckssätt och ett grafiskt gränssnitt som är anpassat för att på ett &lt;strong>gott &lt;/strong>sätt interagera med den avsedda användaren. Elevens färdiga program är utförda med &lt;strong>gott &lt;/strong>resultat i ett eller flera programmeringsspråk och innehåller objektorienterad programmering som är stabil och robust &lt;strong>i program av komplex karaktär&lt;/strong>.&lt;/p>&lt;p>Eleven anpassar &lt;strong>med säkerhet &lt;/strong>sin planering av programmeringsuppgiften, &lt;strong>anpassar polymorfi&lt;/strong>, uppmärksammar problem med typsäkerhet och utför &lt;strong>på ett systematiskt och effektivt sätt &lt;/strong>felsökning av syntaxfel, &lt;strong>körtidsfel och programmeringslogiska fel&lt;/strong>. Innan programmeringsuppgiften avslutas utvärderar eleven med&lt;strong> nyanserade &lt;/strong>omdömen &lt;strong>och med förslag på förbättringar&lt;/strong> programmets prestanda och ändamålsenlighet i &lt;strong>flera&lt;/strong> situationer och sammanhang. Eleven kommunicerar om programmeringsuppgiften och dess utvärdering och använder då&lt;strong> med säkerhet&lt;/strong> datalogiska begrepp.&lt;/p></text><year
                xsi:nil="true"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><gradeStep>A</gradeStep></knowledgeRequirements><knowledgeRequirements><guid
                xsi:nil="true"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><text>&lt;h4>Betyget B&lt;/h4>&lt;p>Betyget B innebär att kunskapskraven för C och till övervägande del för A är uppfyllda.&lt;/p>
</text><year
                xsi:nil="true"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><gradeStep>B</gradeStep></knowledgeRequirements><knowledgeRequirements><guid
                xsi:nil="true"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><text>&lt;h4>Betyget C&lt;/h4>&lt;p>Eleven formulerar och planerar programmeringsuppgifter med enkla klassdiagram. I planeringen väljer eleven &lt;strong>med viss säkerhet&lt;/strong> standardbibliotek, egna och andras klasser, konstruktorer, objekt och gränssnitt som är adekvata för uppgiften.&lt;/p>&lt;p>I sin programmering skriver eleven, med konsekvent kodningsstil och tydlig namngivning, korrekt, strukturerad och &lt;strong>noggrant&lt;/strong> kommenterad källkod med &lt;strong>tillfredsställande&lt;/strong> resultat. Dessutom väljer eleven &lt;strong>med viss säkerhet &lt;/strong>ett uttryckssätt och ett grafiskt gränssnitt som är anpassat för att på ett &lt;strong>tillfredsställande &lt;/strong>sätt interagera med den avsedda användaren. Elevens färdiga program är utförda med &lt;strong>tillfredsställande &lt;/strong>resultat i ett eller flera programmeringsspråk och innehåller objektorienterad programmering som är stabil och robust.&lt;/p>&lt;p>Eleven anpassar &lt;strong>med viss säkerhet &lt;/strong>sin planering av programmeringsuppgiften, uppmärksammar problem med typsäkerhet och utför &lt;strong>på ett systematiskt sätt &lt;/strong>felsökning av syntaxfel, &lt;strong>körtidsfel och programmeringslogiska fel&lt;/strong>. Innan programmeringsuppgiften avslutas utvärderar eleven med &lt;strong>nyanserade &lt;/strong>omdömen programmets prestanda och ändamålsenlighet i &lt;strong>några&lt;/strong> situationer och sammanhang. Eleven kommunicerar om programmeringsuppgiften och dess utvärdering och använder då&lt;strong> med viss säkerhet&lt;/strong> datalogiska begrepp.&lt;/p></text><year
                xsi:nil="true"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><gradeStep>C</gradeStep></knowledgeRequirements><knowledgeRequirements><guid
                xsi:nil="true"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><text>&lt;h4>Betyget D&lt;/h4>&lt;p>Betyget D innebär att kunskapskraven för E och till övervägande del för C är uppfyllda.&lt;/p>
</text><year
                xsi:nil="true"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><gradeStep>D</gradeStep></knowledgeRequirements><knowledgeRequirements><guid
                xsi:nil="true"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><text>&lt;h4>Betyget E&lt;/h4>&lt;p>Eleven formulerar och planerar programmeringsuppgifter med enkla klassdiagram. I planeringen väljer eleven &lt;strong>med viss säkerhet&lt;/strong> standardbibliotek, egna och andras klasser, konstruktorer, objekt och gränssnitt som är adekvata för uppgiften.&lt;/p>&lt;p>I sin programmering skriver eleven, med konsekvent kodningsstil och tydlig namngivning, korrekt, strukturerad och &lt;strong>enkelt&lt;/strong> kommenterad källkod med &lt;strong>tillfredsställande&lt;/strong> resultat. Dessutom väljer eleven &lt;strong>med viss säkerhet &lt;/strong>ett uttryckssätt och ett grafiskt gränssnitt som är anpassat för att på ett &lt;strong>tillfredsställande &lt;/strong>sätt interagera med den avsedda användaren. Elevens färdiga program är utförda med &lt;strong>tillfredsställande &lt;/strong>resultat i ett eller flera programmeringsspråk och innehåller objektorienterad programmering som är stabil och robust &lt;strong>i program av enkel karaktär&lt;/strong>.&lt;/p>&lt;p>Eleven anpassar &lt;strong>med viss säkerhet &lt;/strong>sin planering av programmeringsuppgiften, uppmärksammar problem med typsäkerhet och utför felsökning av &lt;strong>enkla&lt;/strong> syntaxfel. Innan programmeringsuppgiften avslutas utvärderar eleven med&lt;strong> enkla &lt;/strong>omdömen programmets prestanda och ändamålsenlighet i &lt;strong>någon&lt;/strong> situation och i &lt;strong>något&lt;/strong> sammanhang. Eleven kommunicerar om programmeringsuppgiften och dess utvärdering och använder då&lt;strong> med viss säkerhet&lt;/strong> datalogiska begrepp.&lt;/p></text><year
                xsi:nil="true"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><gradeStep>E</gradeStep></knowledgeRequirements><alternativeCourseCode
            xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></courses><typeOfSchooling>UPPER_SECONDARY_EDUCATION</typeOfSchooling><category>OTHER</category></subject>
